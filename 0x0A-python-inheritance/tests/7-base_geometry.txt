Test 7-base_geometry module
=====================
First get 'BaseGeometry':
-------------------
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Test cases:
-----------
>>> bg = BaseGeometry()
>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented

>>> bg.integer_validator("num", 11)

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
TypeError: name must be an integer

>>> bg.integer_validator("float", 9.59)

>>> bg.integer_validator("nf", -17465.01)
Traceback (most recent call last):
ValueError: nf must be greater than 0

>>> bg.integer_validator("zero", 0)
Traceback (most recent call last):
ValueError: zero must be greater than 0

>>> bg.integer_validator("negative", -10)
Traceback (most recent call last):
ValueError: negative must be greater than 0

>>> bg.integer_validator("arr", [3])
Traceback (most recent call last):
TypeError: arr must be an integer

>>> bg.integer_validator("bool", False)
Traceback (most recent call last):
TypeError: bool must be an integer

>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("name")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("name", 12, 34)
Traceback (most recent call last):
TypeError: integer_validator() takes 3 positional arguments but 4 were given
